{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Windows/Documents/AIGP/aigp/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  login: () => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n  const login = () => {\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"names":[],"mappings":";;;;;;;AAEA;;;AAFA;;AAUA,MAAM,4BAAc,IAAA,8KAAa,EAA8B;AAExD,MAAM,eAAkD,CAAC,EAAE,QAAQ,EAAE;;IAC1E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAU;IAEhE,MAAM,QAAQ;QACZ,mBAAmB;IACrB;IAEA,MAAM,SAAS;QACb,mBAAmB;IACrB;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAO;QAAO;kBAC3D;;;;;;AAGP;GAhBa;KAAA;AAkBN,MAAM,UAAU;;IACrB,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}}]
}